
[changelog]
header = """
# PROJECT MUJIWA V4 Changelog\n
Všechny změny projektu MUJIWA jsou zaznamenáné v tomto dokumentu.\n
"""

body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [Nevydaná verze]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
            {% if commit.breaking %}[**Nezpětně kompatibilní změny**] {% endif %}\
            {{ commit.message | upper_first }}\
    {% endfor %}
{% endfor %}\n
"""
# template for the changelog footer
footer = """
Vygenerováno pomocí Git-cliff
"""
# remove the leading and trailing s
trim = true
# postprocessors
postprocessors = [
    # { pattern = '<REPO>', replace = "https://github.com/orhun/git-cliff" }, # replace repository URL
]
# render body even when there are no releases to process
# render_always = true
# output file path
# output = "test.md"

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
    # Replace issue numbers
    #{ pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))"},
    # Check spelling of the commit with https://github.com/crate-ci/typos
    # If the spelling is incorrect, it will be automatically fixed.
    #{ pattern = '.*', replace_command = 'typos --write-changes -' },
]
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^feat", group = "<!-- 0 -->🚀 Nové funkce" },
    { message = "^fix", group = "<!-- 1 -->🐛 Opravy chyb" },
    { message = "^doc", group = "<!-- 3 -->📚 Dokumentace" },
    { message = "^perf", group = "<!-- 4 -->⚡ Výkon" },
    { message = "^refactor", group = "<!-- 2 -->🚜 Refaktorování" },
    { message = "^style", group = "<!-- 5 -->🎨 Styl" },
    { message = "^test", group = "<!-- 6 -->🧪 Testování" },
    { message = "^chore\\(release\\): prepare for", skip = true },
    { message = "^chore\\(deps.*\\)", skip = true },
    { message = "^chore\\(pr\\)", skip = true },
    { message = "^chore\\(pull\\)", skip = true },
    { message = "^chore|^ci", group = "<!-- 7 -->⚙️ Různé úkoly" },
    { body = ".*security", group = "<!-- 8 -->🛡️ Bezpečnost" },
    { message = "^revert", group = "<!-- 9 -->◀️ Vrácení změn" },
    { message = ".*", group = "<!-- 10 -->💼 Ostatní" },
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
